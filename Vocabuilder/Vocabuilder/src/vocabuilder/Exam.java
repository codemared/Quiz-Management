/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vocabuilder;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.JOptionPane;
import static vocabuilder.VocabularyTest.vocabularyTest;

/**
 *
 * @author Md Saddam Hossain
 */
public class Exam extends javax.swing.JFrame {

    public static javax.swing.JPanel jPanel2ForExam;
    public static Exam exam;
    public static DataOutputStream dataOut; // output stream to server
    public static DataInputStream dataIn;
    private int connectionFlag, entryFlag = 0;
    private Socket client;
    public static javax.swing.JTextField jTextField2ForName, jTextField1ForReg_no;
    public static String name, reg_no;

    /**
     * Creates new form Exam
     */
    public Exam() {
        initComponents();
        jPanel2ForExam = jPanel1ForExam;
        jTextField1ForReg_no = jTextField2ForReg_no;
        jTextField2ForName = jTextField1ForName;
        name = jTextField2ForName.getText();
        reg_no = jTextField1ForReg_no.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1ForExam = new javax.swing.JPanel();
        jButton2ForExamStart = new javax.swing.JButton();
        jButton3ForBack = new javax.swing.JButton();
        jLabel1ForExam = new javax.swing.JLabel();
        jTextField1ForName = new javax.swing.JTextField();
        jTextField2ForReg_no = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1ForIp = new javax.swing.JTextField();
        jTextField2ForPort = new javax.swing.JTextField();
        jLabel3ForIp = new javax.swing.JLabel();
        jLabel4ForPort = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vocabuilder");
        setPreferredSize(new java.awt.Dimension(800, 650));
        setResizable(false);

        jPanel1ForExam.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1ForExam.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1ForExam.setPreferredSize(new java.awt.Dimension(800, 650));
        jPanel1ForExam.setLayout(null);

        jButton2ForExamStart.setBackground(new java.awt.Color(255, 255, 255));
        jButton2ForExamStart.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2ForExamStart.setForeground(new java.awt.Color(0, 204, 51));
        jButton2ForExamStart.setText("Let's Start");
        jButton2ForExamStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ForExamStartActionPerformed(evt);
            }
        });
        jPanel1ForExam.add(jButton2ForExamStart);
        jButton2ForExamStart.setBounds(270, 360, 120, 30);

        jButton3ForBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3ForBack.setText("<<-Back");
        jButton3ForBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ForBackActionPerformed(evt);
            }
        });
        jPanel1ForExam.add(jButton3ForBack);
        jButton3ForBack.setBounds(280, 560, 90, 30);

        jLabel1ForExam.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1ForExam.setForeground(new java.awt.Color(0, 255, 204));
        jLabel1ForExam.setText("Welcome to your vocabulary test! :) ");
        jPanel1ForExam.add(jLabel1ForExam);
        jLabel1ForExam.setBounds(204, 70, 270, 30);
        jPanel1ForExam.add(jTextField1ForName);
        jTextField1ForName.setBounds(230, 150, 190, 30);
        jPanel1ForExam.add(jTextField2ForReg_no);
        jTextField2ForReg_no.setBounds(230, 190, 190, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name  :");
        jPanel1ForExam.add(jLabel1);
        jLabel1.setBounds(160, 150, 60, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Reg_No   :");
        jPanel1ForExam.add(jLabel2);
        jLabel2.setBounds(140, 190, 80, 30);
        jPanel1ForExam.add(jTextField1ForIp);
        jTextField1ForIp.setBounds(230, 230, 190, 30);
        jPanel1ForExam.add(jTextField2ForPort);
        jTextField2ForPort.setBounds(230, 270, 190, 30);

        jLabel3ForIp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3ForIp.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3ForIp.setText("Server IP  :");
        jPanel1ForExam.add(jLabel3ForIp);
        jLabel3ForIp.setBounds(140, 230, 80, 30);

        jLabel4ForPort.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4ForPort.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4ForPort.setText("Server Port  :");
        jPanel1ForExam.add(jLabel4ForPort);
        jLabel4ForPort.setBounds(120, 270, 90, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1ForExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 222, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1ForExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ForBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ForBackActionPerformed
        // TODO add your handling code here:

        StartMenu.startMenu.getContentPane().remove(Exam.jPanel2ForExam);
        StartMenu.startMenu.getContentPane().add(StartMenu.startMenu.jPanel2OfStartMenu);
        StartMenu.startMenu.repaint();
    }//GEN-LAST:event_jButton3ForBackActionPerformed

    private void jButton2ForExamStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ForExamStartActionPerformed
        // TODO add your handling code here:

        if (entryFlag == 0) {
            try {
                connectionFlag = 1;
                connectToServer();
                System.out.println("problem!!!");
            } catch (Exception e) {
                connectionFlag = 0;
                JOptionPane.showMessageDialog(null, "Wrong IP or Port Address.", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("Exception in startbutton, after calling the connectToServer() method");
                //e.printStackTrace();                //changed.......................................
            }

            if (connectionFlag == 1) {

                jTextField1ForIp.setEditable(false);
                jTextField2ForPort.setEditable(false);

                Thread thread = new Thread() {
                    public void run() {
                        try {
                            runClient();
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                };

                thread.start();
            }
        }

        StartMenu.startMenu.getContentPane().remove(Exam.jPanel2ForExam);
        new VocabularyTest();
        StartMenu.startMenu.getContentPane().add(VocabularyTest.jPanel2);
        StartMenu.startMenu.repaint();
    }//GEN-LAST:event_jButton2ForExamStartActionPerformed
    public void runClient() {
        try // connect to server, get streams, process connection
        {
            getStreams(); // get the input and output streams
            receive();
            while (true);
        } catch (Exception e) {
            System.out.println("\nClient terminated connection");
            e.printStackTrace();
        } finally {
            closeConnection();
        }
    }

    // connect to server
    private void connectToServer() throws IOException {
        System.out.println("Attempting connection\n");

        // create Socket to make connection to server
        client = new Socket(InetAddress.getByName(jTextField1ForIp.getText()), Integer.parseInt(jTextField2ForPort.getText()));
        System.out.println("Connected to: " + client.getInetAddress().getHostName());
    }

    // get streams to send and receive data
    private void getStreams() throws IOException {
        // set up output stream for objects
        dataOut = new DataOutputStream(client.getOutputStream()); //entered ip and port name server thaklei output create hobe, but input create hobe na
        dataOut.flush(); // flush output buffer to send header information
        // set up input stream for objects
        dataIn = new DataInputStream(client.getInputStream());

        System.out.println("\nGot I/O streams\n");

    }

    private void receive() {
        try {
            int cnt = 0, rowNum = 0;
            String str = "";
            String[][] arr = new String[100][10];
            while(++cnt){
                
            }
        } catch (IOException e) {
            System.out.println("Exception");
        }
    }

    // close streams and socket
    private void closeConnection() {
        try {
            dataOut.close();
            dataIn.close();
            client.close();
        } catch (Exception e) {
            System.out.println("Exception in closeConnection() method, after calling the connection2.close()");
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                exam = new Exam();
                exam.setVisible(true);
                vocabularyTest = new VocabularyTest();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2ForExamStart;
    private javax.swing.JButton jButton3ForBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel1ForExam;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3ForIp;
    private javax.swing.JLabel jLabel4ForPort;
    public static javax.swing.JPanel jPanel1ForExam;
    private javax.swing.JTextField jTextField1ForIp;
    private javax.swing.JTextField jTextField1ForName;
    private javax.swing.JTextField jTextField2ForPort;
    private javax.swing.JTextField jTextField2ForReg_no;
    // End of variables declaration//GEN-END:variables
}
